{
  "contractName": "MerkleTreeWithHistoryMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_treeLevels",
          "type": "uint32"
        },
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FIELD_SIZE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ROOT_HISTORY_SIZE",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ZERO_VALUE",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentRootIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "filledSubtrees",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLastRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IHasher",
          "name": "_hasher",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_left",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "_right",
          "type": "bytes32"
        }
      ],
      "name": "hashLeftRight",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasher",
      "outputs": [
        {
          "internalType": "contract IHasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_root",
          "type": "bytes32"
        }
      ],
      "name": "isKnownRoot",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "levels",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextIndex",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "roots",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "zeros",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_leaf",
          "type": "bytes32"
        }
      ],
      "name": "insert",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_treeLevels\",\"type\":\"uint32\"},{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FIELD_SIZE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROOT_HISTORY_SIZE\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ZERO_VALUE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentRootIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"filledSubtrees\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLastRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"_hasher\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_left\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"_right\",\"type\":\"bytes32\"}],\"name\":\"hashLeftRight\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasher\",\"outputs\":[{\"internalType\":\"contract IHasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_leaf\",\"type\":\"bytes32\"}],\"name\":\"insert\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_root\",\"type\":\"bytes32\"}],\"name\":\"isKnownRoot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"levels\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextIndex\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"roots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"zeros\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getLastRoot()\":{\"details\":\"Returns the last root\"},\"hashLeftRight(address,bytes32,bytes32)\":{\"details\":\"Hash 2 tree leaves, returns MiMC(_left, _right)\"},\"isKnownRoot(bytes32)\":{\"details\":\"Whether the root is present in the root history\"},\"zeros(uint256)\":{\"details\":\"provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/harshbajpai/Desktop/projects/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":\"MerkleTreeWithHistoryMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/harshbajpai/Desktop/projects/tornado-core/contracts/MerkleTreeWithHistory.sol\":{\"keccak256\":\"0x13ab1ee963f427b843baf6d0c1ef04db7c4dbea2a27b59f584e4433235b59a1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8c5ca76ea199d5228c739db25600b51fc540ea63089c9bb9aa65a85088f55df\",\"dweb:/ipfs/QmNq3znvEBj7arHLXfysiQRiLCRCaaHcg6c881PysFvvCu\"]},\"/Users/harshbajpai/Desktop/projects/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol\":{\"keccak256\":\"0x7a07cd2eb7531ae3977bc46b7392cef73d323478c0119ab2c4561325d46b9d31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd29860549b60580bcaae0612bc341c5c0a423f199e24eefe1bc54037367ddb9\",\"dweb:/ipfs/QmVU6W8JRd6EATrgt6gHeDoU2hwDv1NGsfv34JrEpdnEGv\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c8063c2b40ae41161008c578063ec73295911610066578063ec732959146101fe578063ed33639f14610206578063f178e47c1461022a578063fc7e9c6f14610247576100ea565b8063c2b40ae4146101bc578063cd87a3b4146101d9578063e8295588146101e1576100ea565b80636d9833e3116100c85780636d9833e3146101495780638ea3099e1461017a57806390eeb02b146101ac578063ba70f757146101b4576100ea565b80632d287e43146100ef578063414a37ba1461010e5780634ecf518b14610128575b600080fd5b61010c6004803603602081101561010557600080fd5b503561024f565b005b61011661025c565b60408051918252519081900360200190f35b61013061026e565b6040805163ffffffff9092168252519081900360200190f35b6101666004803603602081101561015f57600080fd5b503561027a565b604080519115158252519081900360200190f35b6101166004803603606081101561019057600080fd5b506001600160a01b0381351690602081013590604001356102ec565b6101306104b8565b6101166104c4565b610116600480360360208110156101d257600080fd5b50356104df565b6101306104f1565b610116600480360360208110156101f757600080fd5b50356104f6565b610116610b35565b61020e610b59565b604080516001600160a01b039092168252519081900360200190f35b6101166004803603602081101561024057600080fd5b5035610b7d565b610130610b8f565b61025881610ba3565b5050565b600080516020610d3b83398151915281565b60005463ffffffff1681565b600081610289575060006102e7565b60035463ffffffff16805b63ffffffff81166000908152600260205260409020548414156102bc576001925050506102e7565b63ffffffff81166102cb5750601e5b6000190163ffffffff8082169083161415610294576000925050505b919050565b6000600080516020610d3b8339815191528310610350576040805162461bcd60e51b815260206004820181905260248201527f5f6c6566742073686f756c6420626520696e7369646520746865206669656c64604482015290519081900360640190fd5b600080516020610d3b833981519152821061039c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610d1a6021913960400191505060405180910390fd5b6040805163f47d33b560e01b8152600481018590526000602482018190528251869391926001600160a01b0389169263f47d33b592604480840193829003018186803b1580156103eb57600080fd5b505afa1580156103ff573d6000803e3d6000fd5b505050506040513d604081101561041557600080fd5b5080516020909101519092509050600080516020610d3b8339815191528483089150856001600160a01b031663f47d33b583836040518363ffffffff1660e01b81526004018083815260200182815260200192505050604080518083038186803b15801561048257600080fd5b505afa158015610496573d6000803e3d6000fd5b505050506040513d60408110156104ac57600080fd5b50519695505050505050565b60035463ffffffff1681565b60035463ffffffff1660009081526002602052604090205490565b60026020526000908152604090205481565b601e81565b60008161052457507f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c6102e7565b816001141561055457507f256a6135777eee2fd26f54b8b7037a25439d5235caee224154186d2b8a52e31d6102e7565b816002141561058457507f1151949895e82ab19924de92c40a3d6f7bcb60d92b00504b8199613683f0c2006102e7565b81600314156105b457507f20121ee811489ff8d61f09fb89e313f14959a0f28bb428a20dba6b0b068b3bdb6102e7565b81600414156105e457507f0a89ca6ffa14cc462cfedb842c30ed221a50a3d6bf022a6a57dc82ab24c157c96102e7565b816005141561061457507f24ca05c2b5cd42e890d6be94c68d0689f4f21c9cec9c0f13fe41d566dfb549596102e7565b816006141561064457507f1ccb97c932565a92c60156bdba2d08f3bf1377464e025cee765679e604a7315c6102e7565b816007141561067457507f19156fbd7d1a8bf5cba8909367de1b624534ebab4f0f79e003bccdd1b182bdb46102e7565b81600814156106a457507f261af8c1f0912e465744641409f622d466c3920ac6e5ff37e36604cb11dfff806102e7565b81600914156106d357507e58459724ff6ca5a1652fcbc3e82b93895cf08e975b19beab3f54c217d1c0076102e7565b81600a141561070357507f1f04ef20dee48d39984d8eabe768a70eafa6310ad20849d4573c3c40c2ad1e306102e7565b81600b141561073357507f1bea3dec5dab51567ce7e200a30f7ba6d4276aeaa53e2686f962a46c66d511e56102e7565b81600c141561076357507f0ee0f941e2da4b9e31c3ca97a40d8fa9ce68d97c084177071b3cb46cd3372f0f6102e7565b81600d141561079357507f1ca9503e8935884501bbaf20be14eb4c46b89772c97b96e3b2ebf3a36a948bbd6102e7565b81600e14156107c357507f133a80e30697cd55d8f7d4b0965b7be24057ba5dc3da898ee2187232446cb1086102e7565b81600f14156107f357507f13e6d8fc88839ed76e182c2a779af5b2c0da9dd18c90427a644f7e148a6253b66102e7565b816010141561082357507f1eb16b057a477f4bc8f572ea6bee39561098f78f15bfb3699dcbb7bd8db618546102e7565b816011141561085357507f0da2cb16a1ceaabf1c16b838f7a9e3f2a3a3088d9e0a6debaa748114620696ea6102e7565b816012141561088357507f24a3b3d822420b14b5d8cb6c28a574f01e98ea9e940551d2ebd75cee12649f9d6102e7565b81601314156108b357507f198622acbd783d1b0d9064105b1fc8e4d8889de95c4c519b3f635809fe6afc056102e7565b81601414156108e357507f29d7ed391256ccc3ea596c86e933b89ff339d25ea8ddced975ae2fe30b5296d46102e7565b816015141561091357507f19be59f2f0413ce78c0c3703a3a5451b1d7f39629fa33abd11548a76065b29676102e7565b816016141561094357507f1ff3f61797e538b70e619310d33f2a063e7eb59104e112e95738da1254dc34536102e7565b816017141561097357507f10c16ae9959cf8358980d9dd9616e48228737310a10e2b6b731c1a548f036c486102e7565b81601814156109a357507f0ba433a63174a90ac20992e75e3095496812b652685b5e1a2eae0b1bf4e8fcd16102e7565b81601914156109d357507f019ddb9df2bc98d987d0dfeca9d2b643deafab8f7036562e627c3667266a044c6102e7565b81601a1415610a0357507f2d3c88b23175c5a5565db928414c66d1912b11acf974b2e644caaac04739ce996102e7565b81601b1415610a3357507f2eab55f6ae4e66e32c5189eed5c470840863445760f5ed7e7b69b2a62600f3546102e7565b81601c1415610a6257507e2df37a2642621802383cf952bf4dd1f32e05433beeb1fd41031fb7eace979d6102e7565b81601d1415610a9257507f104aeb41435db66c3e62feccc1d6f5d98d0a0ed75d1374db457cf462e3a1f4276102e7565b81601e1415610ac257507f1f3c6fd858e9a7d4b0d1f38e256a09d81d5a5e3c963987e2d4b814cfab7c6ebb6102e7565b81601f1415610af257507f2c7a07d20dff79d01fecedc1134284a8d08436606c93693b67e333f671bf69cc6102e7565b6040805162461bcd60e51b8152602060048201526013602482015272496e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b7f2fe54c60d3acabf3343a35b6eba15db4821b340f76e741e2249685ed4899af6c81565b7f000000000000000000000000000000000000000000000000000000000000000081565b60016020526000908152604090205481565b600354640100000000900463ffffffff1681565b60035460008054909163ffffffff640100000000909104811691811660020a16811415610c015760405162461bcd60e51b8152600401808060200182810382526030815260200180610d5b6030913960400191505060405180910390fd5b8083600080805b60005463ffffffff9081169082161015610cb25760018516610c5557839250610c368163ffffffff166104f6565b63ffffffff821660009081526001602052604090208590559150610c71565b63ffffffff811660009081526001602052604090205492508391505b610c9c7f000000000000000000000000000000000000000000000000000000000000000084846102ec565b9350600263ffffffff8616049450600101610c08565b505060038054601e63ffffffff8083166001908101821692909206811663ffffffff1990931683178455600092835260026020526040909220949094558154938601166401000000000267ffffffff0000000019909316929092179091555090939250505056fe5f72696768742073686f756c6420626520696e7369646520746865206669656c6430644e72e131a029b85045b68181585d2833e84879b9709143e1f593f00000014d65726b6c6520747265652069732066756c6c2e204e6f206d6f7265206c65617665732063616e206265206164646564a26469706673582212208bdf860509ac9da169bc1781c77b4f3925f70c19c27c6f46196d7c2cd783f89a64736f6c63430007060033",
  "immutableReferences": {
    "250": [
      {
        "length": 32,
        "start": 2907
      },
      {
        "length": 32,
        "start": 3190
      }
    ]
  },
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "97:228:7:-:0;;;1749:34:2;;;-1:-1:-1;;;;;;1787:27:2;;;161:95:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;161:95:7;;;;;;;;;1878:11:2;;;1870:59;;;;-1:-1:-1;;;1870:59:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1953:2;1943:7;:12;;;1935:55;;;;;-1:-1:-1;;;1935:55:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;1996:6;:16;;-1:-1:-1;;1996:16:2;;;;;;;2018;;;;-1:-1:-1;;;;;;2018:16:2;;;2041:80;2064:7;2060:11;;:1;:11;;;2041:80;;;2106:8;;;;:5;:8::i;:::-;2086:17;;;;;;;:14;:17;;;;;;;;:28;;;;2073:3;2041:80;;;-1:-1:-1;2138:18:2;;-1:-1:-1;;2144:11:2;;2138:18;:5;:18::i;:::-;2127:8;;;:5;:8;;;:29;-1:-1:-1;97:228:7;;-1:-1:-1;;;97:228:7;4296:3478:2;4343:7;4362:6;4358:3411;;-1:-1:-1;4385:66:2;4370:82;;4358:3411;4467:1;4472;4467:6;4463:3306;;;-1:-1:-1;4490:66:2;4475:82;;4463:3306;4572:1;4577;4572:6;4568:3201;;;-1:-1:-1;4595:66:2;4580:82;;4568:3201;4677:1;4682;4677:6;4673:3096;;;-1:-1:-1;4700:66:2;4685:82;;4673:3096;4782:1;4787;4782:6;4778:2991;;;-1:-1:-1;4805:66:2;4790:82;;4778:2991;4887:1;4892;4887:6;4883:2886;;;-1:-1:-1;4910:66:2;4895:82;;4883:2886;4992:1;4997;4992:6;4988:2781;;;-1:-1:-1;5015:66:2;5000:82;;4988:2781;5097:1;5102;5097:6;5093:2676;;;-1:-1:-1;5120:66:2;5105:82;;5093:2676;5202:1;5207;5202:6;5198:2571;;;-1:-1:-1;5225:66:2;5210:82;;5198:2571;5307:1;5312;5307:6;5303:2466;;;-1:-1:-1;5330:66:2;5315:82;;5303:2466;5412:1;5417:2;5412:7;5408:2361;;;-1:-1:-1;5436:66:2;5421:82;;5408:2361;5518:1;5523:2;5518:7;5514:2255;;;-1:-1:-1;5542:66:2;5527:82;;5514:2255;5624:1;5629:2;5624:7;5620:2149;;;-1:-1:-1;5648:66:2;5633:82;;5620:2149;5730:1;5735:2;5730:7;5726:2043;;;-1:-1:-1;5754:66:2;5739:82;;5726:2043;5836:1;5841:2;5836:7;5832:1937;;;-1:-1:-1;5860:66:2;5845:82;;5832:1937;5942:1;5947:2;5942:7;5938:1831;;;-1:-1:-1;5966:66:2;5951:82;;5938:1831;6048:1;6053:2;6048:7;6044:1725;;;-1:-1:-1;6072:66:2;6057:82;;6044:1725;6154:1;6159:2;6154:7;6150:1619;;;-1:-1:-1;6178:66:2;6163:82;;6150:1619;6260:1;6265:2;6260:7;6256:1513;;;-1:-1:-1;6284:66:2;6269:82;;6256:1513;6366:1;6371:2;6366:7;6362:1407;;;-1:-1:-1;6390:66:2;6375:82;;6362:1407;6472:1;6477:2;6472:7;6468:1301;;;-1:-1:-1;6496:66:2;6481:82;;6468:1301;6578:1;6583:2;6578:7;6574:1195;;;-1:-1:-1;6602:66:2;6587:82;;6574:1195;6684:1;6689:2;6684:7;6680:1089;;;-1:-1:-1;6708:66:2;6693:82;;6680:1089;6790:1;6795:2;6790:7;6786:983;;;-1:-1:-1;6814:66:2;6799:82;;6786:983;6896:1;6901:2;6896:7;6892:877;;;-1:-1:-1;6920:66:2;6905:82;;6892:877;7002:1;7007:2;7002:7;6998:771;;;-1:-1:-1;7026:66:2;7011:82;;6998:771;7108:1;7113:2;7108:7;7104:665;;;-1:-1:-1;7132:66:2;7117:82;;7104:665;7214:1;7219:2;7214:7;7210:559;;;-1:-1:-1;7238:66:2;7223:82;;7210:559;7320:1;7325:2;7320:7;7316:453;;;-1:-1:-1;7344:66:2;7329:82;;7316:453;7426:1;7431:2;7426:7;7422:347;;;-1:-1:-1;7450:66:2;7435:82;;7422:347;7532:1;7537:2;7532:7;7528:241;;;-1:-1:-1;7556:66:2;7541:82;;7528:241;7638:1;7643:2;7638:7;7634:135;;;-1:-1:-1;7662:66:2;7647:82;;7634:135;7740:29;;;-1:-1:-1;;;7740:29:2;;;;;;;;;;;;;;;;;;;;;;;;;;;7634:135;4296:3478;;;:::o;97:228:7:-;;;;;;;;;;;;",
  "deployedSourceMap": "97:228:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;260:63;;;;;;;;;;;;;;;;-1:-1:-1;260:63:7;;:::i;:::-;;978:114:2;;;:::i;:::-;;;;;;;;;;;;;;;;1289:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3677:394;;;;;;;;;;;;;;;;-1:-1:-1;3677:394:2;;:::i;:::-;;;;;;;;;;;;;;;;;;2233:480;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2233:480:2;;;;;;;;;;;;;:::i;1749:34::-;;;:::i;4117:94::-;;;:::i;1656:40::-;;;;;;;;;;;;;;;;-1:-1:-1;1656:40:2;;:::i;1700:45::-;;;:::i;4296:3478::-;;;;;;;;;;;;;;;;-1:-1:-1;4296:3478:2;;:::i;1096:114::-;;;:::i;1253:31::-;;;:::i;:::-;;;;-1:-1:-1;;;;;1253:31:2;;;;;;;;;;;;;;1603:49;;;;;;;;;;;;;;;;-1:-1:-1;1603:49:2;;:::i;1787:27::-;;;:::i;260:63:7:-;304:14;312:5;304:7;:14::i;:::-;;260:63;:::o;978:114:2:-;-1:-1:-1;;;;;;;;;;;978:114:2;:::o;1289:20::-;;;;;;:::o;3677:394::-;3734:4;3750:10;3746:43;;-1:-1:-1;3777:5:2;3770:12;;3746:43;3821:16;;;;;3877:172;3901:8;;;;;;;:5;:8;;;;;;3892:17;;3888:53;;;3928:4;3921:11;;;;;;3888:53;3952:6;;;3948:52;;-1:-1:-1;1743:2:2;3948:52;-1:-1:-1;;4007:3:2;4025:22;;;;;;;;;3877:172;;4061:5;4054:12;;;;3677:394;;;;:::o;2233:480::-;2341:7;-1:-1:-1;;;;;;;;;;;2364:27:2;;2356:72;;;;;-1:-1:-1;;;2356:72:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2442:28:2;;2434:74;;;;-1:-1:-1;;;2434:74:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2574:24;;;-1:-1:-1;;;2574:24:2;;;;;;;;2514:9;2574:24;;;;;;;;2534:5;;2514:9;;-1:-1:-1;;;;;2574:18:2;;;;;:24;;;;;;;;;;:18;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2574:24:2;;;;;;;;;-1:-1:-1;2574:24:2;-1:-1:-1;;;;;;;;;;;;2626:6:2;2615:1;2608:38;2604:42;;2661:7;-1:-1:-1;;;;;2661:18:2;;2680:1;2683;2661:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2661:24:2;;2233:480;-1:-1:-1;;;;;;2233:480:2:o;1749:34::-;;;;;;:::o;4117:94::-;4189:16;;;;4161:7;4183:23;;;:5;:23;;;;;;4117:94;:::o;1656:40::-;;;;;;;;;;;;;:::o;1700:45::-;1743:2;1700:45;:::o;4296:3478::-;4343:7;4362:6;4358:3411;;-1:-1:-1;4385:66:2;4370:82;;4358:3411;4467:1;4472;4467:6;4463:3306;;;-1:-1:-1;4490:66:2;4475:82;;4463:3306;4572:1;4577;4572:6;4568:3201;;;-1:-1:-1;4595:66:2;4580:82;;4568:3201;4677:1;4682;4677:6;4673:3096;;;-1:-1:-1;4700:66:2;4685:82;;4673:3096;4782:1;4787;4782:6;4778:2991;;;-1:-1:-1;4805:66:2;4790:82;;4778:2991;4887:1;4892;4887:6;4883:2886;;;-1:-1:-1;4910:66:2;4895:82;;4883:2886;4992:1;4997;4992:6;4988:2781;;;-1:-1:-1;5015:66:2;5000:82;;4988:2781;5097:1;5102;5097:6;5093:2676;;;-1:-1:-1;5120:66:2;5105:82;;5093:2676;5202:1;5207;5202:6;5198:2571;;;-1:-1:-1;5225:66:2;5210:82;;5198:2571;5307:1;5312;5307:6;5303:2466;;;-1:-1:-1;5330:66:2;5315:82;;5303:2466;5412:1;5417:2;5412:7;5408:2361;;;-1:-1:-1;5436:66:2;5421:82;;5408:2361;5518:1;5523:2;5518:7;5514:2255;;;-1:-1:-1;5542:66:2;5527:82;;5514:2255;5624:1;5629:2;5624:7;5620:2149;;;-1:-1:-1;5648:66:2;5633:82;;5620:2149;5730:1;5735:2;5730:7;5726:2043;;;-1:-1:-1;5754:66:2;5739:82;;5726:2043;5836:1;5841:2;5836:7;5832:1937;;;-1:-1:-1;5860:66:2;5845:82;;5832:1937;5942:1;5947:2;5942:7;5938:1831;;;-1:-1:-1;5966:66:2;5951:82;;5938:1831;6048:1;6053:2;6048:7;6044:1725;;;-1:-1:-1;6072:66:2;6057:82;;6044:1725;6154:1;6159:2;6154:7;6150:1619;;;-1:-1:-1;6178:66:2;6163:82;;6150:1619;6260:1;6265:2;6260:7;6256:1513;;;-1:-1:-1;6284:66:2;6269:82;;6256:1513;6366:1;6371:2;6366:7;6362:1407;;;-1:-1:-1;6390:66:2;6375:82;;6362:1407;6472:1;6477:2;6472:7;6468:1301;;;-1:-1:-1;6496:66:2;6481:82;;6468:1301;6578:1;6583:2;6578:7;6574:1195;;;-1:-1:-1;6602:66:2;6587:82;;6574:1195;6684:1;6689:2;6684:7;6680:1089;;;-1:-1:-1;6708:66:2;6693:82;;6680:1089;6790:1;6795:2;6790:7;6786:983;;;-1:-1:-1;6814:66:2;6799:82;;6786:983;6896:1;6901:2;6896:7;6892:877;;;-1:-1:-1;6920:66:2;6905:82;;6892:877;7002:1;7007:2;7002:7;6998:771;;;-1:-1:-1;7026:66:2;7011:82;;6998:771;7108:1;7113:2;7108:7;7104:665;;;-1:-1:-1;7132:66:2;7117:82;;7104:665;7214:1;7219:2;7214:7;7210:559;;;-1:-1:-1;7238:66:2;7223:82;;7210:559;7320:1;7325:2;7320:7;7316:453;;;-1:-1:-1;7344:66:2;7329:82;;7316:453;7426:1;7431:2;7426:7;7422:347;;;-1:-1:-1;7450:66:2;7435:82;;7422:347;7532:1;7537:2;7532:7;7528:241;;;-1:-1:-1;7556:66:2;7541:82;;7528:241;7638:1;7643:2;7638:7;7634:135;;;-1:-1:-1;7662:66:2;7647:82;;7634:135;7740:29;;;-1:-1:-1;;;7740:29:2;;;;;;;;;;;;-1:-1:-1;;;7740:29:2;;;;;;;;;;;;;;1096:114;1133:77;1096:114;:::o;1253:31::-;;;:::o;1603:49::-;;;;;;;;;;;;;:::o;1787:27::-;;;;;;;;;:::o;2717:888::-;2807:9;;2767:12;2855:6;;2767:12;;2807:9;;;;;;;;2855:6;;2851:1;2844:17;2830:31;;;;2822:92;;;;-1:-1:-1;;;2822:92:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2942:10;2985:5;2920:19;;;3034:360;3057:6;;;;;;3053:10;;;;3034:360;;;3082:16;;;3078:224;;3122:16;3115:23;;3156:8;3162:1;3156:8;;:5;:8::i;:::-;3174:17;;;;;;;:14;:17;;;;;:36;;;3148:16;-1:-1:-1;3078:224:2;;;3242:17;;;;;;;:14;:17;;;;;;;-1:-1:-1;3277:16:2;;-1:-1:-1;3078:224:2;3328:34;3342:6;3350:4;3356:5;3328:13;:34::i;:::-;3309:53;-1:-1:-1;3386:1:2;3370:17;;;;;-1:-1:-1;3065:3:2;;3034:360;;;-1:-1:-1;;3423:16:2;;;1743:2;3422:42;3423:16;;;;:20;;;3422:42;;;;;;3470:31;;-1:-1:-1;;3470:31:2;;;;;;;-1:-1:-1;3507:19:2;;;:5;:19;;;;;;:38;;;;3551:26;;3563:14;;;3551:26;;;-1:-1:-1;;3551:26:2;;;;;;;;;;-1:-1:-1;3563:14:2;;;-1:-1:-1;;;2717:888:2:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.7.0;\n\nimport \"../MerkleTreeWithHistory.sol\";\n\ncontract MerkleTreeWithHistoryMock is MerkleTreeWithHistory {\n  constructor(uint32 _treeLevels, IHasher _hasher) MerkleTreeWithHistory(_treeLevels, _hasher) {}\n\n  function insert(bytes32 _leaf) public {\n    _insert(_leaf);\n  }\n}\n",
  "sourcePath": "/Users/harshbajpai/Desktop/projects/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
  "ast": {
    "absolutePath": "/Users/harshbajpai/Desktop/projects/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
    "exportedSymbols": {
      "IHasher": [
        242
      ],
      "MerkleTreeWithHistory": [
        897
      ],
      "MerkleTreeWithHistoryMock": [
        1042
      ]
    },
    "id": 1043,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1016,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "absolutePath": "/Users/harshbajpai/Desktop/projects/tornado-core/contracts/MerkleTreeWithHistory.sol",
        "file": "../MerkleTreeWithHistory.sol",
        "id": 1017,
        "nodeType": "ImportDirective",
        "scope": 1043,
        "sourceUnit": 898,
        "src": "57:38:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1018,
              "name": "MerkleTreeWithHistory",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 897,
              "src": "135:21:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MerkleTreeWithHistory_$897",
                "typeString": "contract MerkleTreeWithHistory"
              }
            },
            "id": 1019,
            "nodeType": "InheritanceSpecifier",
            "src": "135:21:7"
          }
        ],
        "contractDependencies": [
          897
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1042,
        "linearizedBaseContracts": [
          1042,
          897
        ],
        "name": "MerkleTreeWithHistoryMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 1030,
              "nodeType": "Block",
              "src": "254:2:7",
              "statements": []
            },
            "id": 1031,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1026,
                    "name": "_treeLevels",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1021,
                    "src": "232:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  {
                    "id": 1027,
                    "name": "_hasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1023,
                    "src": "245:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$242",
                      "typeString": "contract IHasher"
                    }
                  }
                ],
                "id": 1028,
                "modifierName": {
                  "id": 1025,
                  "name": "MerkleTreeWithHistory",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 897,
                  "src": "210:21:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_MerkleTreeWithHistory_$897_$",
                    "typeString": "type(contract MerkleTreeWithHistory)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "210:43:7"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1021,
                  "mutability": "mutable",
                  "name": "_treeLevels",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "173:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1020,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "173:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1023,
                  "mutability": "mutable",
                  "name": "_hasher",
                  "nodeType": "VariableDeclaration",
                  "scope": 1031,
                  "src": "193:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHasher_$242",
                    "typeString": "contract IHasher"
                  },
                  "typeName": {
                    "id": 1022,
                    "name": "IHasher",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 242,
                    "src": "193:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHasher_$242",
                      "typeString": "contract IHasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "172:37:7"
            },
            "returnParameters": {
              "id": 1029,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "254:0:7"
            },
            "scope": 1042,
            "src": "161:95:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1040,
              "nodeType": "Block",
              "src": "298:25:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1037,
                        "name": "_leaf",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1033,
                        "src": "312:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 1036,
                      "name": "_insert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 532,
                      "src": "304:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$returns$_t_uint32_$",
                        "typeString": "function (bytes32) returns (uint32)"
                      }
                    },
                    "id": 1038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "304:14:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 1039,
                  "nodeType": "ExpressionStatement",
                  "src": "304:14:7"
                }
              ]
            },
            "functionSelector": "2d287e43",
            "id": 1041,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "insert",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1033,
                  "mutability": "mutable",
                  "name": "_leaf",
                  "nodeType": "VariableDeclaration",
                  "scope": 1041,
                  "src": "276:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1032,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "276:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "275:15:7"
            },
            "returnParameters": {
              "id": 1035,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "298:0:7"
            },
            "scope": 1042,
            "src": "260:63:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1043,
        "src": "97:228:7"
      }
    ],
    "src": "32:294:7"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/harshbajpai/Desktop/projects/tornado-core/contracts/Mocks/MerkleTreeWithHistoryMock.sol",
      "exportedSymbols": {
        "IHasher": [
          242
        ],
        "MerkleTreeWithHistory": [
          897
        ],
        "MerkleTreeWithHistoryMock": [
          1042
        ]
      },
      "license": "MIT"
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 1016,
        "name": "PragmaDirective",
        "src": "32:23:7"
      },
      {
        "attributes": {
          "SourceUnit": 898,
          "absolutePath": "/Users/harshbajpai/Desktop/projects/tornado-core/contracts/MerkleTreeWithHistory.sol",
          "file": "../MerkleTreeWithHistory.sol",
          "scope": 1043,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 1017,
        "name": "ImportDirective",
        "src": "57:38:7"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            897
          ],
          "contractKind": "contract",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            1042,
            897
          ],
          "name": "MerkleTreeWithHistoryMock",
          "scope": 1043
        },
        "children": [
          {
            "attributes": {},
            "children": [
              {
                "attributes": {
                  "name": "MerkleTreeWithHistory",
                  "referencedDeclaration": 897,
                  "type": "contract MerkleTreeWithHistory"
                },
                "id": 1018,
                "name": "UserDefinedTypeName",
                "src": "135:21:7"
              }
            ],
            "id": 1019,
            "name": "InheritanceSpecifier",
            "src": "135:21:7"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 1042,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_treeLevels",
                      "scope": 1031,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint32",
                          "type": "uint32"
                        },
                        "id": 1020,
                        "name": "ElementaryTypeName",
                        "src": "173:6:7"
                      }
                    ],
                    "id": 1021,
                    "name": "VariableDeclaration",
                    "src": "173:18:7"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_hasher",
                      "scope": 1031,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "contract IHasher",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "IHasher",
                          "referencedDeclaration": 242,
                          "type": "contract IHasher"
                        },
                        "id": 1022,
                        "name": "UserDefinedTypeName",
                        "src": "193:7:7"
                      }
                    ],
                    "id": 1023,
                    "name": "VariableDeclaration",
                    "src": "193:15:7"
                  }
                ],
                "id": 1024,
                "name": "ParameterList",
                "src": "172:37:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1029,
                "name": "ParameterList",
                "src": "254:0:7"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 897,
                      "type": "type(contract MerkleTreeWithHistory)",
                      "value": "MerkleTreeWithHistory"
                    },
                    "id": 1025,
                    "name": "Identifier",
                    "src": "210:21:7"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1021,
                      "type": "uint32",
                      "value": "_treeLevels"
                    },
                    "id": 1026,
                    "name": "Identifier",
                    "src": "232:11:7"
                  },
                  {
                    "attributes": {
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1023,
                      "type": "contract IHasher",
                      "value": "_hasher"
                    },
                    "id": 1027,
                    "name": "Identifier",
                    "src": "245:7:7"
                  }
                ],
                "id": 1028,
                "name": "ModifierInvocation",
                "src": "210:43:7"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 1030,
                "name": "Block",
                "src": "254:2:7"
              }
            ],
            "id": 1031,
            "name": "FunctionDefinition",
            "src": "161:95:7"
          },
          {
            "attributes": {
              "functionSelector": "2d287e43",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "insert",
              "scope": 1042,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_leaf",
                      "scope": 1041,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bytes32",
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bytes32",
                          "type": "bytes32"
                        },
                        "id": 1032,
                        "name": "ElementaryTypeName",
                        "src": "276:7:7"
                      }
                    ],
                    "id": 1033,
                    "name": "VariableDeclaration",
                    "src": "276:13:7"
                  }
                ],
                "id": 1034,
                "name": "ParameterList",
                "src": "275:15:7"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1035,
                "name": "ParameterList",
                "src": "298:0:7"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 532,
                              "type": "function (bytes32) returns (uint32)",
                              "value": "_insert"
                            },
                            "id": 1036,
                            "name": "Identifier",
                            "src": "304:7:7"
                          },
                          {
                            "attributes": {
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1033,
                              "type": "bytes32",
                              "value": "_leaf"
                            },
                            "id": 1037,
                            "name": "Identifier",
                            "src": "312:5:7"
                          }
                        ],
                        "id": 1038,
                        "name": "FunctionCall",
                        "src": "304:14:7"
                      }
                    ],
                    "id": 1039,
                    "name": "ExpressionStatement",
                    "src": "304:14:7"
                  }
                ],
                "id": 1040,
                "name": "Block",
                "src": "298:25:7"
              }
            ],
            "id": 1041,
            "name": "FunctionDefinition",
            "src": "260:63:7"
          }
        ],
        "id": 1042,
        "name": "ContractDefinition",
        "src": "97:228:7"
      }
    ],
    "id": 1043,
    "name": "SourceUnit",
    "src": "32:294:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.6+commit.7338295f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2022-04-21T12:05:16.723Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getLastRoot()": {
        "details": "Returns the last root"
      },
      "hashLeftRight(address,bytes32,bytes32)": {
        "details": "Hash 2 tree leaves, returns MiMC(_left, _right)"
      },
      "isKnownRoot(bytes32)": {
        "details": "Whether the root is present in the root history"
      },
      "zeros(uint256)": {
        "details": "provides Zero (Empty) elements for a MiMC MerkleTree. Up to 32 levels"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}